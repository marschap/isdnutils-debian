--- isdnutils-3.3.orig/vbox/src/Makefile.in
+++ isdnutils-3.3/vbox/src/Makefile.in
@@ -38,7 +38,7 @@
 		$(CC) $(CFLAGS) -c lists.c
 
 script.o:	$(HEADERS) script.c
-		$(CC) $(CFLAGS) -DBINDIR='"$(VBOX_BINDIR)"' -c script.c
+		$(CC) $(CFLAGS) -DBINDIR='"$(VBOX_SBINDIR)"' -c script.c
 
 voice.o:	$(HEADERS) voice.c
 		$(CC) $(CFLAGS) $(VBOX_SUSPEND_DEF) -c voice.c
@@ -147,7 +147,7 @@
 VBOXDOBJS	= vboxd.o streamio.o
 
 vboxd:		  $(VBOXDOBJS)
-		  $(CC) $(CFLAGS) $(VBOXDOBJS) -o vboxd -L. -lvbox
+		  $(CC) $(CFLAGS) $(VBOXDOBJS) -o vboxd -L. -lvbox -lcrypt
 
 distclean: clean
 
--- isdnutils-3.3.orig/vbox/src/vboxd.c
+++ isdnutils-3.3/vbox/src/vboxd.c
@@ -6,6 +6,9 @@
 
 #include "config.h"
 
+#define _GNU_SOURCE   /* for crypt() */
+#include <unistd.h>
+
 #if TIME_WITH_SYS_TIME
 #   include <sys/time.h>
 #   include <time.h>
@@ -21,7 +24,6 @@
 #include <stdlib.h>
 #include <stdarg.h>
 #include <string.h>
-#include <unistd.h>
 #include <errno.h>
 #include <dirent.h>
 #include <fnmatch.h>
@@ -96,7 +98,7 @@
 	{ "list"      , srv_list       },
 	{ "noop"      , srv_noop       },
 	{ "count"     , srv_count      },
-   { "login"     , srv_login      },
+        { "login"     , srv_login      },
 	{ "header"    , srv_header     },
 	{ "message"   , srv_message    },
 	{ "toggle"    , srv_toggle     },
@@ -109,11 +111,11 @@
 
 static struct option arguments[] =
 {
-	{ "version"		, no_argument			, NULL, 'v' },
-	{ "help"			, no_argument			, NULL, 'h' },
-	{ "timeout"		, required_argument	, NULL, 't' },
-	{ "file"       , required_argument  , NULL, 'f' },
-	{ NULL			, 0						, NULL, 0   }
+	{ "version"	, no_argument		, NULL, 'v' },
+	{ "help"	, no_argument		, NULL, 'h' },
+	{ "timeout"	, required_argument     , NULL, 't' },
+	{ "file"        , required_argument     , NULL, 'f' },
+	{ NULL		, 0			, NULL, 0   }
 };
 
 /**************************************************************************/
@@ -251,7 +253,7 @@
 	fprintf(stderr, "Usage: %s [ OPTION ] [ ... ]\n", vbasename);
 	fprintf(stderr, "\n");
 	fprintf(stderr, "-f, --file FILE      Overwrites \"%s\".\n", VBOXDRC);
-   fprintf(stderr, "-t, --timeout SECS   Close connection after SECS idle time (default 600).\n");
+        fprintf(stderr, "-t, --timeout SECS   Close connection after SECS idle time (default 600).\n");
 	fprintf(stderr, "-v, --version        Displays program version.\n");
 	fprintf(stderr, "-h, --help           Displays this message.\n");
 	fprintf(stderr, "\n");
@@ -425,7 +427,7 @@
 		{
 			syslog(LOG_ERR, "can't read (%s).", strerror(errno));
 
-         message("%s can't read (%s).\r\n", VBOXD_VAL_TEMPERROR, strerror(errno));
+                        message("%s can't read (%s).\r\n", VBOXD_VAL_TEMPERROR, strerror(errno));
 
 			return(VBOXD_ERR_TIMEOUT);
 		}
@@ -522,51 +524,51 @@
 
    while (streamio_gets(line, VBOXD_LEN_ACCESSLINE, accesslist))
    {
-		if ((line[0] != 'L') || (line[1] != ':')) continue;
+        if ((line[0] != 'L') || (line[1] != ':')) continue;
 
-      /*
-       * Split the current line into seperate fields.
-       */
-
-      for (list[0] = line, i = 0, p = line; ((*p) && (i < 3)); p++)
-      {
-         if (*p == ':')
-         {
-            *p = '\0';
-
-            list[++i] = (p + 1);
-         }
-      }
-
-		if (i != 2) continue;
-
-		/*
-		 * Check if the hostname or the hosts ip address matchs the current
-		 * pattern.
-		 */
+        /*
+         * Split the current line into seperate fields.
+         */
+
+        for (list[0] = line, i = 0, p = line; ((*p) && (i < 3)); p++)
+        {
+            if (*p == ':')
+            {
+                *p = '\0';
+
+                list[++i] = (p + 1);
+            }
+        }
+
+        if (i != 2) continue;
+
+        /*
+         * Check if the hostname or the hosts ip address matchs the current
+         * pattern.
+         */
+
+        if ((name) || (addr))
+        {
+            if (!wildmat(name, list[1]))
+            {
+                if (!wildmat(addr, list[1])) continue;
+            }
+        }
+
+        /*
+         * Check if the client has access to count new messages. If true,
+         * the "login" is correct.
+         */
+
+        if ((strcasecmp(list[2], "yes")) == 0 || (strcasecmp(list[2], "y") == 0))
+        {
+            client_access |= VBOXD_ACC_COUNT;
+
+            returnok();
+        }
+    }
 
-		if ((name) || (addr))
-		{
-			if (!wildmat(name, list[1]))
-			{
-				if (!wildmat(addr, list[1])) continue;
-			}
-		}
-
-		/*
-		 * Check if the client has access to count new messages. If true,
-		 * the "login" is correct.
-		 */
-
-		if ((strcasecmp(list[2], "yes")) == 0 || (strcasecmp(list[2], "y") == 0))
-		{
-			client_access |= VBOXD_ACC_COUNT;
-
-			returnok();
-		}
-	}
-
-	returnerror();
+    returnerror();
 }
 
 /**************************************************************************/
@@ -634,7 +636,20 @@
 
 			if (strcmp(list[4], "-" ) == 0) continue;
 			if (strcmp(list[4], "!" ) == 0) continue;
-			if (strcmp(list[4], pass) != 0) continue;
+                        if (strncmp(list[4], "DES ", 4) == 0 && strlen(list[4]) == 17) {
+                            /* This is a DES-encrypted password */
+                            char salt[3];
+                            salt[0] = list[4][4];
+                            salt[1] = list[4][5];
+                            salt[2] = 0;
+                            if (strcmp(&(list[4][4]), crypt(pass, salt)) != 0)
+                                continue;       /* no match, next line */
+                        }
+                        else {
+                            if (strcmp(list[4], pass) != 0)
+                                continue;
+                        }
+                        /* fallthrough case: password accepted */
 		}
 
 		/*
@@ -712,7 +727,7 @@
 
 	va_start(arg, fmt);
 	vfprintf(stdout, fmt, arg);
-   va_end(arg);
+        va_end(arg);
 }
 
 /**************************************************************************/
@@ -849,7 +864,7 @@
 						if (read(fd, block, status.st_size) == status.st_size)
 						{
 							message("%s %d\r\n", VBOXD_VAL_MESSAGE, status.st_size);
-                     pullmsg(stdout);
+                                                        pullmsg(stdout);
 
 							write(STDOUT_FILENO, block, status.st_size);
 
@@ -972,20 +987,20 @@
 
 static void srv_help(int argc, char **argv)
 {
-   message("%s Commands require special access:\r\n"                                , VBOXD_VAL_HELP);
-   message("%s \r\n"                                                                , VBOXD_VAL_HELP);
+        message("%s Commands require special access:\r\n"                                , VBOXD_VAL_HELP);
+        message("%s \r\n"                                                                , VBOXD_VAL_HELP);
 	message("%s LIST                               List all messages.\r\n"           , VBOXD_VAL_HELP);
 	message("%s COUNT                              Count new messages.\r\n"          , VBOXD_VAL_HELP);
-   message("%s DELETE     <message>               Delete a message.\r\n"            , VBOXD_VAL_HELP);
+        message("%s DELETE     <message>               Delete a message.\r\n"            , VBOXD_VAL_HELP);
 	message("%s MESSAGE    <message>               Get a message.\r\n"               , VBOXD_VAL_HELP);
-   message("%s HEADER     <message>               Get a message header.\r\n"        , VBOXD_VAL_HELP);
-   message("%s TOGGLE     <message>               Toggle message new flag.\r\n"     , VBOXD_VAL_HELP);
-   message("%s STATUSCTRL <control>               Check if control exists.\r\n"     , VBOXD_VAL_HELP);
-   message("%s CREATECTRL <control>               Create a control file.\r\n"       , VBOXD_VAL_HELP);
-   message("%s REMOVECTRL <control>               Remove a control file.\r\n"       , VBOXD_VAL_HELP);
-   message("%s \r\n"                                                                , VBOXD_VAL_HELP);
-   message("%s Commands available for all clients:\r\n"                             , VBOXD_VAL_HELP);
-   message("%s \r\n"                                                                , VBOXD_VAL_HELP);
+        message("%s HEADER     <message>               Get a message header.\r\n"        , VBOXD_VAL_HELP);
+        message("%s TOGGLE     <message>               Toggle message new flag.\r\n"     , VBOXD_VAL_HELP);
+        message("%s STATUSCTRL <control>               Check if control exists.\r\n"     , VBOXD_VAL_HELP);
+        message("%s CREATECTRL <control>               Create a control file.\r\n"       , VBOXD_VAL_HELP);
+        message("%s REMOVECTRL <control>               Remove a control file.\r\n"       , VBOXD_VAL_HELP);
+        message("%s \r\n"                                                                , VBOXD_VAL_HELP);
+        message("%s Commands available for all clients:\r\n"                             , VBOXD_VAL_HELP);
+        message("%s \r\n"                                                                , VBOXD_VAL_HELP);
 	message("%s LOGIN      <username> [password]   Login as user (gives access).\r\n", VBOXD_VAL_HELP);
 	message("%s NOOP                               Does nothing.\r\n"                , VBOXD_VAL_HELP);
 	message("%s HELP                               Display command list.\r\n"        , VBOXD_VAL_HELP);
--- isdnutils-3.3.orig/vbox/examples/vboxd.conf.example
+++ isdnutils-3.3/vbox/examples/vboxd.conf.example
@@ -13,7 +13,9 @@
 # All hosts in the full access list (begins with 'A') are checked if the
 # server gets the 'login' command.
 
-A:localhost:RW:michael:xxx:/var/spool/vbox/michael:incoming
-A:localhost:RW:nicole:xxx:/var/spool/vbox/nicole:incoming
+# One user in this file can be configured by the `debconf' system, the next one.
+# Remove this comment if you don't want any configuration to happen.
+A:localhost:RW:username:*invalid*password*:/var/spool/vbox/ttyI6:incoming
+# A:localhost:RW:nicole:xxx:/var/spool/vbox/nicole:incoming
 
 A:*:!:!:!:!:!
--- isdnutils-3.3.orig/vbox/examples/vboxgetty.conf.example
+++ isdnutils-3.3/vbox/examples/vboxgetty.conf.example
@@ -21,17 +21,17 @@
 # Settings for port ttyI6
 
 port /dev/ttyI6
-  modeminit		ATZ&B512&E7830022
-  user			nicole
+  modeminit		ATZ&B512&E000000
+  user			vboxdaemonuser
   group			users
-  spooldir		/var/spool/vbox/nicole
-
+  spooldir		/var/spool/vbox/ttyI6
+  vboxconfig		/home/vboxdaemonuser/.vbox.conf
 
 # Settings for port ttyI7
 
-port /dev/ttyI7
-  modeminit		ATZ&B512&E7850413
-  user			michael
-  group			users
-  spooldir		/var/spool/vbox/michael
+#port /dev/ttyI7
+#  modeminit		ATZ&B512&E7850413
+#  user			michael
+#  group			users
+#  spooldir		/var/spool/vbox/michael
 
--- isdnutils-3.3.orig/vbox/doc/vbox.conf.man
+++ isdnutils-3.3/vbox/doc/vbox.conf.man
@@ -166,7 +166,7 @@
 this configuration file.
 
 .TP
-/usr/doc/isdnutils/examples/vbox.conf
+/usr/share/doc/isdnvboxserver/examples/vbox.conf
 an example.
 
 .SH SEE ALSO
@@ -175,3 +175,4 @@
 .SH AUTHOR
 This manual page was written by Andreas Jellinghaus <aj@dungeon.inka.de>,
 for Debian GNU/Linux and isdn4linux.
+Now maintained by Paul Slootman <paul@debian.org>.
--- isdnutils-3.3.orig/vbox/doc/vboxd.conf.man
+++ isdnutils-3.3/vbox/doc/vboxd.conf.man
@@ -67,9 +67,10 @@
 this configuration file
 
 .TP
-.B /usr/doc/isdnutils/examples/vboxd.conf
+.B /usr/share/doc/isdnvboxserver/examples/vboxd.conf
 an example
 
 .SH AUTHOR
 This manual page was written by Andreas Jellinghaus <aj@dungeon.inka.de>,
 for Debian GNU/Linux and isdn4linux.
+Now maintained by Paul Slootman <paul@debian.org>.
--- isdnutils-3.3.orig/vbox/doc/vboxmail.man
+++ isdnutils-3.3/vbox/doc/vboxmail.man
@@ -16,6 +16,26 @@
 to send notification of a new voice message via email. It is not meant
 to be called directly by any user.
 
+You can make local modifications to this script by copying it from
+/usr/sbin/vboxmail to /etc/isdn/vboxmail, and editing the copy there.
+
+Note that there is an enhanced version of this script available as
+/usr/share/doc/isdnvboxserver/vboxmail.enhanced . To use it, copy it
+to /etc/isdn/vboxmail .  This enhanced version will send the recorded message
+as a MIME attachment in the email notification.
+If lame or xingmp3enc are installed in /usr/local/bin, then the message will
+be converted to MP3 format; otherwise, it will be sent as a WAV file.
+For this to work, you also need the following packages installed:
+.br
+.B mime-construct sox
+.br
+and of course an MP3 encoder if you want MP3 format. Note that the MP3 format
+will only be 50% smaller (instead of the 90% you might otherwise expect),
+because of the relatively bad sound quality to begin with (8kHz sampling, mono).
+If you want to use another MP3 encoder than lame or xingmp3enc, you'll have to
+make patches to the script. I'll be happy to implement your changes. Send them
+as a wishlist bug report on isdnvboxserver.
+
 .SH SEE ALSO
 .B vboxgetty(8), vboxgetty.conf(5)
 
--- isdnutils-3.3.orig/vbox/doc/vboxrc.man
+++ isdnutils-3.3/vbox/doc/vboxrc.man
@@ -88,7 +88,7 @@
 .B ~/.vboxrc
 this configuration file
 .TP
-.B /usr/doc/isdnutils/examples/vboxrc
+.B /usr/share/doc/isdnvboxclient/examples/vboxrc
 an example
 
 .SH SEE ALSO
@@ -97,3 +97,4 @@
 .SH AUTHOR
 This manual page was written by Andreas Jellinghaus <aj@dungeon.inka.de>,
 for Debian GNU/Linux and isdn4linux.
+Now maintained by Paul Slootman <paul@debian.org>.
Index: isdnutils/vbox/doc/vbox_file.man
===================================================================
--- isdnutils.orig/vbox/doc/vbox_file.man       2010-09-12 18:45:11.000000000 +0200
+++ isdnutils/vbox/doc/vbox_file.man    2010-09-12 18:46:33.000000000 +0200
@@ -2,7 +2,7 @@
 .\" CHECKIN $Date: 2001/03/01 14:45:07 $
 .TH vbox 5 "@MANDATE@" "ISDN 4 Linux @I4LVERSION@" "Linux System Administration"
 .SH NAME
-vbox files \- file format
+vbox \- file format
 .SH FORMAT
 With version 2.0.0 of vbox the recorded files have a new header, that
 does not only include compression mode and connection information, but
