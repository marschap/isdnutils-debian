#!/bin/sh

set -e

if [ "$1" != "configure" ]; then exit 0; fi

# Source debconf library.
. /usr/share/debconf/confmodule

db_set isdnvboxserver/dummy donetwice # next time, do it again

DEVDIR=/dev
if [ ! -c $DEVDIR/ttyI6 ]; then
    if grep 'type devfs' /proc/mounts >/dev/null; then
        DEVDIR=/dev/isdn
    fi
fi

# Do this first, so we can shortcut the rest
if ! egrep -q '#-- isdn(vboxserver|utils) begin' /etc/inittab; then
    # I hate having to cater for history
    if ! egrep -q vboxgetty /etc/inittab; then
        db_get isdnvboxserver/doinit || true
        if [ $RET = yes ]; then

            cat >>/etc/inittab <<EOF
#-- isdnvboxserver begin
I6:2345:respawn:/usr/sbin/vboxgetty -d $DEVDIR/ttyI6
#-- isdnvboxserver end
EOF
        else
            cat >>/etc/inittab <<EOF
#-- isdnvboxserver begin
#I6:2345:respawn:/usr/sbin/vboxgetty -d $DEVDIR/ttyI6
#-- isdnvboxserver end
EOF
        fi
    fi
else
    if grep vboxgetty /etc/inittab >/dev/null; then
        # perhaps inittab still contains the pre-devfs device name,
        # check it and give a notice if it's wrong (either way).
        DEV=`grep vboxgetty /etc/inittab | sed 's,.*-d *\(/dev[^ ]*\).*,\1,'`
        if [ -z "$DEV" ]; then
            : # ok, no device found?
        else
            if [ -c "$DEV" ]; then
                : # ok
            else
                oldDEVDIR=`expr "$DEV" : "\(.*\)/"`
                if [ "$oldDEVDIR" != "$DEVDIR" ]; then
                    db_get isdnvboxserver/devfs_inittab || true
                    db_go
                fi
            fi
        fi
        # restart with possibly changed parameters
        if killall -q vboxgetty 2>/dev/null; then
            : # ok
        else
            for i in /var/run/vboxgetty-*.pid; do
                kill `cat $i 2>/dev/null || true` 2>/dev/null || true # sheesh
            done
        fi
    fi
fi
# Doing this now isn't so bad, even though perhaps the config files
# aren't correct yet, because it won't be started until needed anyway.
# It's a different story for 'init q' though.
    # the "|| true" is because update-inetd fails if xinetd is used?! Not my problem.
update-inetd --add "vboxd	stream	tcp	nowait	root	/usr/sbin/tcpd	/usr/sbin/vboxd" || true

db_get isdnvboxserver/msn || true
VBOX_MSN=`echo "$RET" | tr -d ' '`; export VBOX_MSN
if [ -z "$RET" -o `echo "$RET" | tr A-Z a-z` = quit ]; then # do it by hand
    echo "Not touching any isdnvboxserver config files."
    db_stop
    exit 0
fi

if [ -s /etc/isdn/vboxgetty.conf ]; then
    # only use ttyI6
    eval `perl -- - /etc/isdn/vboxgetty.conf <<'EOF'
        while (<>) {
            if (m,^port (/dev/(isdn/)?)ttyI6,) {
                print "oldDEVDIR=$1\n";
                last;
            }
        }
        while (<>) {
            last if m,^port,;
            if (/^\s+spooldir\s+(\S+)/) {
                print "VBOX_SPOOL=$1\n";
                exit 0;
            }
        }
EOF
    `
    if [ "$oldDEVDIR" != "$DEVDIR/" ]; then
        db_get isdnvboxserver/devfs_vboxgettyconf || true
        db_go
    fi
fi
db_get isdnvboxserver/user || true
VBOX_USER=`echo "$RET" | tr -d ' '`
if [ ! -z "$VBOX_USER" ]; then
    db_get isdnvboxserver/password || true
    VBOX_PASSWORD=$(echo "$RET" | sed 's,^ *,,' | sed 's, *$,,')
fi
db_get isdnvboxserver/daemonuser || true
VBOX_DUSER=`echo "$RET" | tr -d ' '`

if [ -z "$VBOX_SPOOL" ]; then
    VBOX_SPOOL=/var/spool/vbox/ttyI6
fi

if [ ! -d "$VBOX_SPOOL" ]; then
    # on initial installation it won't exist, and "old" name == new name
    # so create it here if necessary
    mkdir -p "$VBOX_SPOOL/incoming" "$VBOX_SPOOL/messages"
    cp /usr/share/doc/isdnvboxserver/examples/standard.tcl.example "$VBOX_SPOOL/./standard.tcl"
fi
if chown -R "$VBOX_DUSER" "$VBOX_SPOOL"; then
    : #OK
else
    echo "Somehow the user you entered is not valid after all."
    echo "Run 'dpkg-reconfigure isdnvboxserver' to remedy the situation."
    echo "Continuing on now anyway."
    VBOX_DUSER=''
fi

# end of spooldir handling....
###################################

if [ ! -z "$VBOX_DUSER" ]; then
    VBOX_USERHOME=`getent passwd "$VBOX_DUSER" | cut -f6 -d:`
    if [ ! -z "$VBOX_USERHOME" ]; then
        if [ -d "$VBOX_SPOOL" ]; then
            chown -R "$VBOX_DUSER" "$VBOX_SPOOL"
        fi
        if [ -d "$VBOX_USERHOME" ]; then
            if [ ! -s "$VBOX_USERHOME/.vbox.conf" ]; then
                cp /usr/share/isdn/default/vbox.conf $VBOX_USERHOME/.vbox.conf
                chown $VBOX_DUSER $VBOX_USERHOME/.vbox.conf
            fi
        else
            db_subst isdnvboxserver/vboxnodir DIR  $VBOX_USERHOME
            db_subst isdnvboxserver/vboxnodir USER "$VBOX_DUSER"
            db_fset isdnvboxserver/vboxnodir seen false
            db_input high isdnvboxserver/vboxnodir || true
        fi
    else
        db_subst isdnvboxserver/vboxnouser USER $VBOX_DUSER
        db_input high isdnvboxserver/vboxnouser || true
    fi
    db_go || true
    mv -f /etc/isdn/vboxgetty.conf /etc/isdn/vboxgetty.conf.bak || echo "mv 4 failed"
    perl -- - > /etc/isdn/vboxgetty.conf <<EOF
        open(STDIN, '/etc/isdn/vboxgetty.conf.bak');
        while (<>) { print; last if m,^port /dev/(isdn/)?ttyI6,; }
        while (<>) {
            if (m,^port,) {
            print;
            last;
            }
            s/^(\s+modeminit\s+.*&E)\s*\d*(.*)/\${1}$VBOX_MSN\${2}/;
            s/^(\s+user\s+)\S+(.*)/\${1}$VBOX_DUSER\${2}/;
            print;
        }
        print <>;
EOF
fi
if [ ! -z "$VBOX_USER" ]; then
# Lines in vboxd.conf:
#   # Remove this comment if you don't want any configuration to happen.
#   A:localhost:RW:username:*invalid*password*:/var/spool/vbox/username:incoming
    if [ -s /etc/isdn/vboxd.conf ]; then
        mv -f /etc/isdn/vboxd.conf /etc/isdn/vboxd.conf.bak || echo "mv 5 failed"
        VBOX_PASSWORD_ESC=`echo "$VBOX_PASSWORD" | perl -pe 'print quotemeta'`
        perl -- - > /etc/isdn/vboxd.conf <<EOF
            \$user = <DATA>; chomp \$user;
            \$password = <DATA>; chomp \$password;
            \$spool = <DATA>; chomp \$spool;
            # perhaps password is already crypted
            unless (\$password =~ /^DES /) {
                # yes, I know the salt should be random, no inspiration right now
                \$password = 'DES ' . crypt(\$password, 'vv');
            }
            open(STDIN, '/etc/isdn/vboxd.conf.bak');
            while (<>) { print; last if m,^# Remove this comment if you don't want,; }
            if (\$_ = <>) {
                    s{^(A:[^:]+:[^:]+):[^:]+:[^:]+:[^:]+}{\$1:\$user:\$password:\$spool};
                    print;
                    print <>;
            }
__DATA__
$VBOX_USER
$VBOX_PASSWORD
$VBOX_SPOOL
EOF
        chmod 600 /etc/isdn/vboxd.conf
        chown root /etc/isdn/vboxd.conf
    fi
fi

# if inittab was changed up above, make init reread it
init q
# vboxgetty might have new parameters, make sure they're used
if [ -s /var/run/vboxgetty-ttyI6.pid ]; then
    kill `cat vboxgetty-ttyI6.pid 2>/dev/null` >/dev/null 2>&1 || true
fi

db_stop

#DEBHELPER#

exit 0
